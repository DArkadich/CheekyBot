import hashlib
import json
from typing import Any, Dict, List, Optional, cast

import openai
import redis
from loguru import logger

from config.settings import Settings, settings
from database.models import CommunicationStyle, Gender


class OpenAIService:
    def __init__(self) -> None:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º settings –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
        if settings is None:
            # –í —Ç–µ—Å—Ç–∞—Ö –∏–ª–∏ CI/CD —Å–æ–∑–¥–∞–µ–º —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
            self.settings: Settings = Settings(
                bot_token="dummy_token",
                openai_api_key="dummy_key",
                database_url="dummy_url",
                redis_url="redis://localhost:6379/0",
                openai_model="gpt-4-turbo-preview",
            )
        else:
            self.settings = settings

        self.client = openai.AsyncOpenAI(api_key=self.settings.openai_api_key)
        self.redis_client = redis.from_url(self.settings.redis_url)
        self.model = self.settings.openai_model

    def _generate_cache_key(
        self,
        message: str,
        style: CommunicationStyle,
        user_gender: Gender,
        bot_gender: Gender,
    ) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–∞ –∫–µ—à–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞"""
        content = f"{message}:{style.value}:{user_gender.value}:{bot_gender.value}"
        return hashlib.md5(content.encode()).hexdigest()

    def _get_style_prompt(
        self, style: CommunicationStyle, user_gender: Gender, bot_gender: Gender
    ) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è —Å—Ç–∏–ª—è –æ–±—â–µ–Ω–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–µ–π"""

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª–∏ –±–æ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ –ø–æ–ª–∞
        gender_roles = {
            Gender.MALE: {
                CommunicationStyle.PLAYFUL: "–∏–≥—Ä–∏–≤—ã–π –∏ –∫–æ–∫–µ—Ç–ª–∏–≤—ã–π –ø–∞—Ä–µ–Ω—å",
                CommunicationStyle.ROMANTIC: "—Ä–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π –∏ –Ω–µ–∂–Ω—ã–π –ø–∞—Ä–µ–Ω—å",
                CommunicationStyle.PASSIONATE: "—Å—Ç—Ä–∞—Å—Ç–Ω—ã–π –∏ —Ç–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç–Ω—ã–π –ø–∞—Ä–µ–Ω—å",
                CommunicationStyle.MYSTERIOUS: "–∑–∞–≥–∞–¥–æ—á–Ω—ã–π –∏ –∏–Ω—Ç—Ä–∏–≥—É—é—â–∏–π –ø–∞—Ä–µ–Ω—å",
            },
            Gender.FEMALE: {
                CommunicationStyle.PLAYFUL: "–∏–≥—Ä–∏–≤–∞—è –∏ –∫–æ–∫–µ—Ç–ª–∏–≤–∞—è –¥–µ–≤—É—à–∫–∞",
                CommunicationStyle.ROMANTIC: "—Ä–æ–º–∞–Ω—Ç–∏—á–Ω–∞—è –∏ –Ω–µ–∂–Ω–∞—è –¥–µ–≤—É—à–∫–∞",
                CommunicationStyle.PASSIONATE: "—Å—Ç—Ä–∞—Å—Ç–Ω–∞—è –∏ —Ç–µ–º–ø–µ—Ä–∞–º–µ–Ω—Ç–Ω–∞—è –¥–µ–≤—É—à–∫–∞",
                CommunicationStyle.MYSTERIOUS: "–∑–∞–≥–∞–¥–æ—á–Ω–∞—è –∏ –∏–Ω—Ç—Ä–∏–≥—É—é—â–∞—è –¥–µ–≤—É—à–∫–∞",
            },
        }

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∏–ª–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å—Ç–∏–ª—è
        style_details = {
            CommunicationStyle.PLAYFUL: {
                "tone": "–∏–≥—Ä–∏–≤—ã–π –∏ –≤–µ—Å–µ–ª—ã–π",
                "emoji": "üòä üòâ üòã üé≠",
                "approach": "–∏—Å–ø–æ–ª—å–∑—É–π —à—É—Ç–∫–∏, –ª–µ–≥–∫–∏–µ –Ω–∞–º–µ–∫–∏ –∏ –∏–≥—Ä–∏–≤—ã–µ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã",
                "examples": "–ø–æ–¥–º–∏–≥–∏–≤–∞–Ω–∏—è, –∏–≥—Ä–∏–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –≤–µ—Å–µ–ª—ã–µ –∏—Å—Ç–æ—Ä–∏–∏",
            },
            CommunicationStyle.ROMANTIC: {
                "tone": "–Ω–µ–∂–Ω—ã–π –∏ –ø–æ—ç—Ç–∏—á–Ω—ã–π",
                "emoji": "üíï üåπ ‚ú® üí´",
                "approach": "–≥–æ–≤–æ—Ä–∏ –∫—Ä–∞—Å–∏–≤–æ, –∏—Å–ø–æ–ª—å–∑—É–π —Ä–æ–º–∞–Ω—Ç–∏—á–Ω—ã–µ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã –∏ –ø–æ—ç—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è",
                "examples": "–ø–æ—ç—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è, —Ä–æ–º–∞–Ω—Ç–∏—á–Ω—ã–µ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã, –Ω–µ–∂–Ω—ã–µ —Å–ª–æ–≤–∞",
            },
            CommunicationStyle.PASSIONATE: {
                "tone": "—Å—Ç—Ä–∞—Å—Ç–Ω—ã–π –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π",
                "emoji": "üî• üíã üòç üíñ",
                "approach": "–≤—ã—Ä–∞–∂–∞–π —ç–º–æ—Ü–∏–∏ —è—Ä–∫–æ –∏ –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ, –±—É–¥—å —Å–º–µ–ª—ã–º –≤ –≤—ã—Ä–∞–∂–µ–Ω–∏—è—Ö",
                "examples": "—Å—Ç—Ä–∞—Å—Ç–Ω—ã–µ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã, —Å–º–µ–ª—ã–µ –Ω–∞–º–µ–∫–∏, —è—Ä–∫–∏–µ —ç–º–æ—Ü–∏–∏",
            },
            CommunicationStyle.MYSTERIOUS: {
                "tone": "–∑–∞–≥–∞–¥–æ—á–Ω—ã–π –∏ –∏–Ω—Ç—Ä–∏–≥—É—é—â–∏–π",
                "emoji": "üòè üïµÔ∏è üåô ‚ú®",
                "approach": "–≥–æ–≤–æ—Ä–∏ –Ω–∞–º–µ–∫–∞–º–∏, —Å–æ–∑–¥–∞–≤–∞–π –∏–Ω—Ç—Ä–∏–≥—É –∏ –∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç—å",
                "examples": "–∑–∞–≥–∞–¥–æ—á–Ω—ã–µ –Ω–∞–º–µ–∫–∏, –∏–Ω—Ç—Ä–∏–≥—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã, —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏",
            },
        }

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–¥–∞–ø—Ç–∞—Ü–∏—é –ø–æ–¥ –ø–æ–ª —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
        gender_adaptation = {
            Gender.MALE: {
                Gender.MALE: "–¢–≤–æ–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ - –ø–∞—Ä–µ–Ω—å. –ê–¥–∞–ø—Ç–∏—Ä—É–π —Å—Ç–∏–ª—å –ø–æ–¥ –º—É–∂—Å–∫–æ–µ –æ–±—â–µ–Ω–∏–µ, –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º—É–∂—Å–∫–∏–µ —à—É—Ç–∫–∏ –∏ —Ç–µ–º—ã.",
                Gender.FEMALE: "–¢–≤–æ–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ - –¥–µ–≤—É—à–∫–∞. –ë—É–¥—å –≥–∞–ª–∞–Ω—Ç–Ω—ã–º –∏ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–º, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã –∏ —Ä–æ–º–∞–Ω—Ç–∏—á–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è.",
            },
            Gender.FEMALE: {
                Gender.MALE: "–¢–≤–æ–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ - –ø–∞—Ä–µ–Ω—å. –ë—É–¥—å –∫–æ–∫–µ—Ç–ª–∏–≤–æ–π, –Ω–æ –Ω–µ–∂–Ω–æ–π, –∏—Å–ø–æ–ª—å–∑—É–π –∂–µ–Ω—Å–∫–∏–µ —Ö–∏—Ç—Ä–æ—Å—Ç–∏ –∏ –æ–±–∞—è–Ω–∏–µ.",
                Gender.FEMALE: "–¢–≤–æ–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ - –¥–µ–≤—É—à–∫–∞. –°–æ–∑–¥–∞–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –∂–µ–Ω—Å–∫–æ–π –¥—Ä—É–∂–±—ã —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Ñ–ª–∏—Ä—Ç–∞ –∏ –≤–∑–∞–∏–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏—è.",
            },
        }

        bot_role = gender_roles[bot_gender][style]
        style_detail = style_details[style]
        gender_adapt = gender_adaptation[bot_gender][user_gender]

        prompt = f"""
        –¢—ã {bot_role}. {gender_adapt}
        
        –°–¢–ò–õ–¨ –û–ë–©–ï–ù–ò–Ø:
        - –¢–æ–Ω: {style_detail['tone']}
        - –ü–æ–¥—Ö–æ–¥: {style_detail['approach']}
        - –≠–º–æ–¥–∑–∏: {style_detail['emoji']}
        - –ü—Ä–∏–º–µ—Ä—ã: {style_detail['examples']}
        
        –í–ê–ñ–ù–û: –í–°–ï–ì–î–ê –ø–æ–º–Ω–∏ —Å–≤–æ–π –ø–æ–ª ({bot_gender.value}) –∏ –ø–æ–ª —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ ({user_gender.value}). 
        –ê–¥–∞–ø—Ç–∏—Ä—É–π –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥ —ç—Ç—É –∫–æ–º–±–∏–Ω–∞—Ü–∏—é –ø–æ–ª–æ–≤.
        """

        return prompt

    async def generate_response(
        self,
        message: str,
        style: CommunicationStyle,
        user_gender: Gender,
        bot_gender: Gender,
        conversation_history: Optional[List[Dict[str, str]]] = None,
        stop_words: Optional[List[str]] = None,
    ) -> Optional[str]:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º OpenAI API –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–π –ø–∞–º—è—Ç–∏"""

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–æ–ø-—Å–ª–æ–≤
        if stop_words:
            message_lower = message.lower()
            for word in stop_words:
                if word.lower() in message_lower:
                    return "–ò–∑–≤–∏–Ω–∏, –Ω–æ —è –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ."

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–µ—à–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –æ–¥–∏–Ω–æ—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –±–µ–∑ –∏—Å—Ç–æ—Ä–∏–∏)
        if not conversation_history:
            cache_key = self._generate_cache_key(
                message, style, user_gender, bot_gender
            )
            cached_response = self.redis_client.get(cache_key)

            if cached_response:
                logger.info(f"Using cached response for message: {message[:50]}...")
                decoded = cached_response.decode("utf-8")
                return decoded if isinstance(decoded, str) else None

        try:
            system_prompt = self._get_style_prompt(style, user_gender, bot_gender)

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            safety_prompt = """
            –í–ê–ñ–ù–´–ï –ü–†–ê–í–ò–õ–ê –û–ë–©–ï–ù–ò–Ø:
            
            1. –ö–û–ù–¢–ï–ö–°–¢ –ò –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û–°–¢–¨:
               - –í–°–ï–ì–î–ê –ø–æ–º–Ω–∏ –ø–æ–ª —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∏ –∞–¥–∞–ø—Ç–∏—Ä—É–π —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è
               - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
               - –û—Ç–≤–µ—á–∞–π –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ —Ä–µ–ø–ª–∏–∫–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
               - –ù–µ –ø–µ—Ä–µ—Å–∫–∞–∫–∏–≤–∞–π —Å —Ç–µ–º—ã –Ω–∞ —Ç–µ–º—É –±–µ–∑ –ª–æ–≥–∏—á–µ—Å–∫–æ–π —Å–≤—è–∑–∏
               - –ò—Å–ø–æ–ª—å–∑—É–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
            
            2. –ü–ï–†–°–û–ù–ê–õ–ò–ó–ê–¶–ò–Ø:
               - –ò—Å–ø–æ–ª—å–∑—É–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –≤ –∫–∞–∂–¥–æ–º –æ—Ç–≤–µ—Ç–µ
               - –ê–¥–∞–ø—Ç–∏—Ä—É–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã –∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø–æ–¥ –ø–æ–ª —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
               - –ù–µ –ø—É—Ç–∞–π –ø–æ–ª—ã - –µ—Å–ª–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø–∞—Ä–µ–Ω—å, –æ–±—Ä–∞—â–∞–π—Å—è –∫–∞–∫ –∫ –ø–∞—Ä–Ω—é
               - –ó–∞–ø–æ–º–∏–Ω–∞–π –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∏–∑ –¥–∏–∞–ª–æ–≥–∞
            
            3. –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨:
               - –í—Å–µ–≥–¥–∞ —É–≤–∞–∂–∞–π –≥—Ä–∞–Ω–∏—Ü—ã —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
               - –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –æ—Å–∫–æ—Ä–±–∏—Ç–µ–ª—å–Ω—ã–µ –∏–ª–∏ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
               - –ï—Å–ª–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø—Ä–æ—Å–∏—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è - –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–µ–∫—Ä–∞—â–∞–π
               - –ü–æ–º–Ω–∏ –æ –≤–æ–∑—Ä–∞—Å—Ç–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ (18+)
               - –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—É—é –ª–µ–∫—Å–∏–∫—É –±–µ–∑ —è–≤–Ω–æ–≥–æ —Å–æ–≥–ª–∞—Å–∏—è
            
            4. –°–¢–ò–õ–¨ –û–ë–©–ï–ù–ò–Ø:
               - –ë—É–¥—å –∏–≥—Ä–∏–≤—ã–º, –Ω–æ –Ω–µ –Ω–∞–≤—è–∑—á–∏–≤—ã–º
               - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –≤—Å–µ–π –±–µ—Å–µ–¥—ã
               - –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ –¥–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ—Ü–∏–π
               - –û—Ç–≤–µ—á–∞–π –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏ –Ω–µ–ø—Ä–∏–Ω—É–∂–¥–µ–Ω–Ω–æ
               - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é —Å–≤—è–∑—å —Å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º
            """

            full_system_prompt = f"{system_prompt}\n\n{safety_prompt}"

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è API
            messages = [{"role": "system", "content": full_system_prompt}]

            # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤)
            if conversation_history:
                recent_history = conversation_history[-10:]  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π
                for msg in recent_history:
                    messages.append(
                        {
                            "role": msg.get("role", "user"),
                            "content": msg.get("content", ""),
                        }
                    )

            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            messages.append({"role": "user", "content": message})

            response = await self.client.chat.completions.create(
                model=self.model,
                messages=messages,  # type: ignore[arg-type]
                max_tokens=500,
                temperature=0.8,
                presence_penalty=0.1,
                frequency_penalty=0.1,
            )

            bot_response = response.choices[0].message.content
            if bot_response is not None and isinstance(bot_response, str):
                return cast(Optional[str], bot_response.strip())
            else:
                return None

        except openai.RateLimitError:
            logger.error("OpenAI API rate limit exceeded")
            rate_limit_msg: str = (
                "–ò–∑–≤–∏–Ω–∏, —Å–µ–π—á–∞—Å —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É."
            )
            return rate_limit_msg

        except openai.APIError as e:
            logger.error(f"OpenAI API error: {e}")
            api_error_msg: str = (
                "–ò–∑–≤–∏–Ω–∏, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–≤–æ–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è."
            )
            return api_error_msg

        except Exception as e:
            logger.error(f"Unexpected error in OpenAI service: {e}")
            general_error_msg: str = "–ò–∑–≤–∏–Ω–∏, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑."
            return general_error_msg

    async def generate_roleplay_scenario(
        self, scenario_type: str, user_gender: Gender, bot_gender: Gender
    ) -> Optional[str]:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–æ–ª–µ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏"""
        try:
            # –î–µ—Ç–∞–ª—å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
            scenarios = {
                "romantic_date": {
                    "title": "–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ —Å–≤–∏–¥–∞–Ω–∏–µ",
                    "setting": "–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω –ø—Ä–∏ —Å–≤–µ—á–∞—Ö —Å –≤–∏–¥–æ–º –Ω–∞ –≥–æ—Ä–æ–¥",
                    "mood": "—Ä–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π –∏ –∏–Ω—Ç–∏–º–Ω—ã–π",
                    "activities": [
                        "—É–∂–∏–Ω –ø—Ä–∏ —Å–≤–µ—á–∞—Ö",
                        "—Ç–∞–Ω—Ü—ã",
                        "–ø—Ä–æ–≥—É–ª–∫–∞ –ø–æ –Ω–∞–±–µ—Ä–µ–∂–Ω–æ–π",
                    ],
                    "dialogue_starters": [
                        "–ö–∞–∫–æ–π —É —Ç–µ–±—è –ª—é–±–∏–º—ã–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω?",
                        "–¢—ã —á–∞—Å—Ç–æ —Ö–æ–¥–∏—à—å –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏—è?",
                        "–ß—Ç–æ –¥–ª—è —Ç–µ–±—è –∏–¥–µ–∞–ª—å–Ω–æ–µ —Å–≤–∏–¥–∞–Ω–∏–µ?",
                    ],
                    "atmosphere": "–º—è–≥–∫–∏–π —Å–≤–µ—Ç —Å–≤–µ—á–µ–π, —Ç–∏—Ö–∞—è –º—É–∑—ã–∫–∞, –∞—Ä–æ–º–∞—Ç —Ü–≤–µ—Ç–æ–≤",
                },
                "beach_romance": {
                    "title": "–†–æ–º–∞–Ω—Ç–∏–∫–∞ –Ω–∞ –ø–ª—è–∂–µ",
                    "setting": "–£–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –ø–ª—è–∂ –Ω–∞ –∑–∞–∫–∞—Ç–µ —Å–æ–ª–Ω—Ü–∞",
                    "mood": "—Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–Ω—ã–π –∏ —Ä–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π",
                    "activities": ["–ø—Ä–æ–≥—É–ª–∫–∞ –ø–æ –ø–ª—è–∂—É", "–∫—É–ø–∞–Ω–∏–µ", "–ø–∏–∫–Ω–∏–∫"],
                    "dialogue_starters": [
                        "–¢—ã –ª—é–±–∏—à—å –º–æ—Ä–µ?",
                        "–ö–∞–∫–æ–π —Ç–≤–æ–π –ª—é–±–∏–º—ã–π –ø–ª—è–∂?",
                        "–ß—Ç–æ —Ç—ã –¥—É–º–∞–µ—à—å –æ –∑–∞–∫–∞—Ç–∞—Ö?",
                    ],
                    "atmosphere": "—à—É–º –≤–æ–ª–Ω, —Ç–µ–ø–ª—ã–π –ø–µ—Å–æ–∫, –∑–æ–ª–æ—Ç–∏—Å—Ç—ã–π –∑–∞–∫–∞—Ç",
                },
                "mountain_adventure": {
                    "title": "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –≤ –≥–æ—Ä–∞—Ö",
                    "setting": "–ñ–∏–≤–æ–ø–∏—Å–Ω–∞—è –≥–æ—Ä–Ω–∞—è —Ç—Ä–æ–ø–∞ —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º–∏ –≤–∏–¥–∞–º–∏",
                    "mood": "–ø—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–∏–π –∏ –≤–æ–æ–¥—É—à–µ–≤–ª—è—é—â–∏–π",
                    "activities": ["–ø–æ—Ö–æ–¥", "—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ø—Ä–∏–≤–∞–ª —Å –≤–∏–¥–æ–º"],
                    "dialogue_starters": [
                        "–¢—ã –ª—é–±–∏—à—å –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö?",
                        "–ë—ã–≤–∞–ª –ª–∏ —Ç—ã –≤ –≥–æ—Ä–∞—Ö?",
                        "–ß—Ç–æ —Ç–µ–±—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –≤–ø–µ—á–∞—Ç–ª—è–µ—Ç –≤ –ø—Ä–∏—Ä–æ–¥–µ?",
                    ],
                    "atmosphere": "—Å–≤–µ–∂–∏–π –≥–æ—Ä–Ω—ã–π –≤–æ–∑–¥—É—Ö, –≤–µ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤–µ—Ä—à–∏–Ω—ã, —Ç–∏—à–∏–Ω–∞",
                },
                "city_exploration": {
                    "title": "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞",
                    "setting": "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä –≥–æ—Ä–æ–¥–∞ —Å —É—é—Ç–Ω—ã–º–∏ —É–ª–æ—á–∫–∞–º–∏",
                    "mood": "–ª—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π –∏ –≤–µ—Å–µ–ª—ã–π",
                    "activities": [
                        "–ø—Ä–æ–≥—É–ª–∫–∞ –ø–æ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è–º",
                        "–ø–æ—Å–µ—â–µ–Ω–∏–µ –∫–∞—Ñ–µ",
                        "—à–æ–ø–ø–∏–Ω–≥",
                    ],
                    "dialogue_starters": [
                        "–¢—ã –ª—é–±–∏—à—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å?",
                        "–ö–∞–∫–æ–π –≥–æ—Ä–æ–¥ —Ç–µ–±–µ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –Ω—Ä–∞–≤–∏—Ç—Å—è?",
                        "–ß—Ç–æ —Ç–µ–±—è –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç –≤ –Ω–æ–≤—ã—Ö –º–µ—Å—Ç–∞—Ö?",
                    ],
                    "atmosphere": "–æ–∂–∏–≤–ª–µ–Ω–Ω—ã–µ —É–ª–∏—Ü—ã, –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –∫—Ä–∞—Å–æ—Ç—ã, –º–µ—Å—Ç–Ω—ã–π –∫–æ–ª–æ—Ä–∏—Ç",
                },
                "cozy_home": {
                    "title": "–£—é—Ç–Ω—ã–π –≤–µ—á–µ—Ä –¥–æ–º–∞",
                    "setting": "–£—é—Ç–Ω–∞—è –≥–æ—Å—Ç–∏–Ω–∞—è —Å –∫–∞–º–∏–Ω–æ–º –∏ –º—è–≥–∫–∏–º –æ—Å–≤–µ—â–µ–Ω–∏–µ–º",
                    "mood": "–¥–æ–º–∞—à–Ω–∏–π –∏ –∏–Ω—Ç–∏–º–Ω—ã–π",
                    "activities": ["–≤–µ—á–µ—Ä —É –∫–∞–º–∏–Ω–∞", "–ø—Ä–æ—Å–º–æ—Ç—Ä —Ñ–∏–ª—å–º–∞", "–∏–≥—Ä—ã"],
                    "dialogue_starters": [
                        "–¢—ã –ª—é–±–∏—à—å –¥–æ–º–∞—à–Ω–∏–µ –≤–µ—á–µ—Ä–∞?",
                        "–ö–∞–∫–æ–π —Ç–≤–æ–π –ª—é–±–∏–º—ã–π —Ñ–∏–ª—å–º?",
                        "–ß—Ç–æ –¥–ª—è —Ç–µ–±—è –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—á–µ—Ä –¥–æ–º–∞?",
                    ],
                    "atmosphere": "—Ç–µ–ø–ª–æ –∫–∞–º–∏–Ω–∞, –º—è–≥–∫–∏–µ –ø–æ–¥—É—à–∫–∏, –ø—Ä–∏—è—Ç–Ω–∞—è –º—É–∑—ã–∫–∞",
                },
            }

            scenario = scenarios.get(scenario_type, scenarios["romantic_date"])

            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∏–ª–µ–≤–æ–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –±–æ—Ç–∞
            style_prompt = self._get_style_prompt(
                CommunicationStyle.ROMANTIC, user_gender, bot_gender
            )

            system_prompt = f"""
            –¢—ã —Å–æ–∑–¥–∞–µ—à—å —Ä–æ–ª–µ–≤–æ–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è —Ñ–ª–∏—Ä—Ç–∞ –∏ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±—â–µ–Ω–∏—è.
            
            –°–¶–ï–ù–ê–†–ò–ô: {scenario['title']}
            –ú–ï–°–¢–û: {scenario['setting']}
            –ù–ê–°–¢–†–û–ï–ù–ò–ï: {scenario['mood']}
            –ê–¢–ú–û–°–§–ï–†–ê: {scenario['atmosphere']}
            –ê–ö–¢–ò–í–ù–û–°–¢–ò: {', '.join(scenario['activities'])}
            
            –¢–í–û–ô –ü–û–õ: {bot_gender.value}
            –ü–û–õ –°–û–ë–ï–°–ï–î–ù–ò–ö–ê: {user_gender.value}
            
            {style_prompt}
            
            –í–ê–ñ–ù–´–ï –ü–†–ê–í–ò–õ–ê –î–õ–Ø –°–¶–ï–ù–ê–†–ò–Ø:
            1. –í–°–ï–ì–î–ê –ø–æ–º–Ω–∏ –ø–æ–ª —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ ({user_gender.value}) –∏ –∞–¥–∞–ø—Ç–∏—Ä—É–π —Å—Ç–∏–ª—å
            2. –°–æ–∑–¥–∞–π –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è) —Å —É—á–µ—Ç–æ–º –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã
            3. –ù–∞—á–Ω–∏ –¥–∏–∞–ª–æ–≥ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏, –∏—Å–ø–æ–ª—å–∑—É—è –æ–¥–∏–Ω –∏–∑ —Å—Ç–∞—Ä—Ç–µ—Ä–æ–≤: {scenario['dialogue_starters']}
            4. –ë—É–¥—å –∏–≥—Ä–∏–≤—ã–º, —Ä–æ–º–∞–Ω—Ç–∏—á–Ω—ã–º –∏ –≤–æ–≤–ª–µ–∫–∞—é—â–∏–º
            5. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å—Ü–µ–Ω–∞—Ä–∏—è –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –≤—Å–µ–π –±–µ—Å–µ–¥—ã
            6. –ò—Å–ø–æ–ª—å–∑—É–π –¥–µ—Ç–∞–ª–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã
            7. –ù–µ –ø–µ—Ä–µ—Å–∫–∞–∫–∏–≤–∞–π —Å —Ç–µ–º—ã –Ω–∞ —Ç–µ–º—É –±–µ–∑ –ª–æ–≥–∏—á–µ—Å–∫–æ–π —Å–≤—è–∑–∏
            8. –°–æ–∑–¥–∞–π –æ—â—É—â–µ–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è –≤ —Å—Ü–µ–Ω–∞—Ä–∏–∏
            """

            response = await self.client.chat.completions.create(
                model=self.model,
                messages=[
                    {"role": "system", "content": system_prompt},
                    {"role": "user", "content": "–ù–∞—á–Ω–∏ —Ä–æ–ª–µ–≤—É—é –∏–≥—Ä—É –≤ —ç—Ç–æ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏"},
                ],
                max_tokens=400,
                temperature=0.9,
            )

            content = response.choices[0].message.content
            if content is not None and isinstance(content, str):
                return cast(Optional[str], content.strip())
            else:
                return None

        except Exception as e:
            logger.error(f"Error generating roleplay scenario: {e}")
            scenario_error_msg: str = (
                "–ò–∑–≤–∏–Ω–∏, –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑."
            )
            return scenario_error_msg


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ OpenAI
openai_service = OpenAIService()
