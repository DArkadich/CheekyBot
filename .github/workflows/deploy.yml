name: Deploy to Timeweb

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT || 22 }}
        script: |
          echo "üöÄ Starting deployment..."
          
          # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
          cd /home/${{ secrets.USERNAME }}/CheekyBot
          
          # –°–æ–∑–¥–∞–Ω–∏–µ backup
          echo "üì¶ Creating backup..."
          if [ -d ".git" ]; then
            git stash
          fi
          
          # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          echo "üõë Stopping current containers..."
          docker compose down || true
          
          # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
          echo "üì• Pulling latest changes..."
          if [ -d ".git" ]; then
            git pull origin main
          else
            echo "‚ùå Git repository not found. Please clone the repository first."
            exit 1
          fi
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
          if [ ! -f ".env" ]; then
            echo "‚ö†Ô∏è .env file not found. Creating from example..."
            cp config.env.example .env
            echo "üìù Please configure .env file with proper values!"
          fi
          
          # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
          mkdir -p logs
          
          # –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          echo "üî® Building and starting containers..."
          docker compose up -d --build
          
          # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
          echo "‚è≥ Waiting for services to start..."
          sleep 30
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
          echo "üîç Checking container status..."
          docker compose ps
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –Ω–∞ –æ—à–∏–±–∫–∏
          echo "üìã Checking for errors in logs..."
          if docker compose logs bot | grep -i "error\|exception\|failed" | head -5; then
            echo "‚ö†Ô∏è Found potential errors in logs"
          else
            echo "‚úÖ No obvious errors found in logs"
          fi
          
          echo "‚úÖ Deployment completed successfully!"
          
    - name: Notify deployment status
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "‚úÖ Deployment successful!"
        else
          echo "‚ùå Deployment failed!"
        fi 